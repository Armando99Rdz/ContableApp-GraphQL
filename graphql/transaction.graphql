
# Defino una cuenta y sus campos (el modelo).
# Con ! establece que es requerido (sin ! ser√≠a nullable).
type Transaction {
    id: ID!
    amount: Float!
    type: TransactionType!
    description: String!
    account: Account! @belongsTo
    category: Category! @belongsTo
    created_at: DateTime!
    updated_at: DateTime!
}

input CreateTransactionInput {
    account_id: ID! @rules(apply: ["exists:accounts,id"]) #
    category_id: ID! @rules(apply: ["exists:categories,id"]) #
    amount: Float! @rules(apply: ["gt:0"]) # balance debe ser mayor a 0
    type: TransactionType!
    description: String!
}


input UpdateTransactionInput{
    account_id: ID @rules(apply: ["exists:accounts,id"]) #
    category_id: ID @rules(apply: ["exists:categories,id"]) #
    description: String
    amount: Float @rules(apply: ["gt:0"]) # balance debe ser mayor a 0
    type: TransactionType
}

# Crear un tipo de dato enum que puede alojar
# "INCOME" y "EXPENSE" como valores (Entreda y Gasto).
enum TransactionType{
    INCOME
    EXPENSE
}
